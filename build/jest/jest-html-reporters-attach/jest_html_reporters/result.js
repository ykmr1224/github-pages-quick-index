window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":28,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":28,"startTime":1756610573119,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756610578362,"runtime":4651,"slow":false,"start":1756610573711},"testFilePath":"/home/runner/work/github-pages-quick-index/github-pages-quick-index/__tests__/tree-formatter.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TreeFormatter"],"duration":7,"failureMessages":[],"fullName":"TreeFormatter should format tree as string correctly","status":"passed","title":"should format tree as string correctly"},{"ancestorTitles":["TreeFormatter"],"duration":2,"failureMessages":[],"fullName":"TreeFormatter should format tree as JSON correctly","status":"passed","title":"should format tree as JSON correctly"},{"ancestorTitles":["TreeFormatter"],"duration":1,"failureMessages":[],"fullName":"TreeFormatter should format empty tree correctly","status":"passed","title":"should format empty tree correctly"},{"ancestorTitles":["TreeFormatter"],"duration":1,"failureMessages":[],"fullName":"TreeFormatter should format single file tree correctly","status":"passed","title":"should format single file tree correctly"},{"ancestorTitles":["TreeFormatter"],"duration":1,"failureMessages":[],"fullName":"TreeFormatter should format JSON without pretty printing when specified","status":"passed","title":"should format JSON without pretty printing when specified"},{"ancestorTitles":["TreeFormatter"],"duration":1,"failureMessages":[],"fullName":"TreeFormatter should handle complex nested structure","status":"passed","title":"should handle complex nested structure"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756610578470,"runtime":4858,"slow":false,"start":1756610573612},"testFilePath":"/home/runner/work/github-pages-quick-index/github-pages-quick-index/__tests__/file-crawler.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FileCrawler"],"duration":20,"failureMessages":[],"fullName":"FileCrawler should build correct tree structure","status":"passed","title":"should build correct tree structure"},{"ancestorTitles":["FileCrawler"],"duration":2,"failureMessages":[],"fullName":"FileCrawler should handle nested directory structures","status":"passed","title":"should handle nested directory structures"},{"ancestorTitles":["FileCrawler"],"duration":1,"failureMessages":[],"fullName":"FileCrawler should handle empty file list","status":"passed","title":"should handle empty file list"},{"ancestorTitles":["FileCrawler"],"duration":1,"failureMessages":[],"fullName":"FileCrawler should handle single file","status":"passed","title":"should handle single file"},{"ancestorTitles":["FileCrawler","Regex Filtering"],"duration":2,"failureMessages":[],"fullName":"FileCrawler Regex Filtering should filter files by regex pattern","status":"passed","title":"should filter files by regex pattern"},{"ancestorTitles":["FileCrawler","Regex Filtering"],"duration":4,"failureMessages":[],"fullName":"FileCrawler Regex Filtering should match files starting with specific pattern","status":"passed","title":"should match files starting with specific pattern"},{"ancestorTitles":["FileCrawler","Regex Filtering"],"duration":0,"failureMessages":[],"fullName":"FileCrawler Regex Filtering should match files ending with specific pattern","status":"passed","title":"should match files ending with specific pattern"},{"ancestorTitles":["FileCrawler","Regex Filtering"],"duration":2,"failureMessages":[],"fullName":"FileCrawler Regex Filtering should handle invalid regex gracefully","status":"passed","title":"should handle invalid regex gracefully"},{"ancestorTitles":["FileCrawler","Regex Filtering"],"duration":1,"failureMessages":[],"fullName":"FileCrawler Regex Filtering should match all files when no filter is provided","status":"passed","title":"should match all files when no filter is provided"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756610578839,"runtime":5121,"slow":true,"start":1756610573718},"testFilePath":"/home/runner/work/github-pages-quick-index/github-pages-quick-index/__tests__/html-generator.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["HtmlGenerator"],"duration":291,"failureMessages":[],"fullName":"HtmlGenerator should generate valid HTML index","status":"passed","title":"should generate valid HTML index"},{"ancestorTitles":["HtmlGenerator"],"duration":1,"failureMessages":[],"fullName":"HtmlGenerator should handle empty tree","status":"passed","title":"should handle empty tree"},{"ancestorTitles":["HtmlGenerator"],"duration":0,"failureMessages":[],"fullName":"HtmlGenerator should use default options when none provided","status":"passed","title":"should use default options when none provided"},{"ancestorTitles":["HtmlGenerator"],"duration":3,"failureMessages":[],"fullName":"HtmlGenerator should handle nested directory structure","status":"passed","title":"should handle nested directory structure"},{"ancestorTitles":["HtmlGenerator"],"duration":1,"failureMessages":[],"fullName":"HtmlGenerator should include proper CSS styling","status":"passed","title":"should include proper CSS styling"},{"ancestorTitles":["HtmlGenerator"],"duration":0,"failureMessages":[],"fullName":"HtmlGenerator should include metadata when provided","status":"passed","title":"should include metadata when provided"},{"ancestorTitles":["HtmlGenerator"],"duration":1,"failureMessages":[],"fullName":"HtmlGenerator should handle files with special characters in names","status":"passed","title":"should handle files with special characters in names"},{"ancestorTitles":["HtmlGenerator"],"duration":1,"failureMessages":[],"fullName":"HtmlGenerator should generate responsive design elements","status":"passed","title":"should generate responsive design elements"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1756610579177,"runtime":803,"slow":false,"start":1756610578374},"testFilePath":"/home/runner/work/github-pages-quick-index/github-pages-quick-index/__tests__/index.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["GitHub Action Integration"],"duration":1,"failureMessages":[],"fullName":"GitHub Action Integration should handle errors gracefully","status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["GitHub Action Integration"],"duration":0,"failureMessages":[],"fullName":"GitHub Action Integration should handle non-Error exceptions","status":"passed","title":"should handle non-Error exceptions"},{"ancestorTitles":["GitHub Action Integration"],"duration":1,"failureMessages":[],"fullName":"GitHub Action Integration should use default input values when none provided","status":"passed","title":"should use default input values when none provided"},{"ancestorTitles":["GitHub Action Integration"],"duration":0,"failureMessages":[],"fullName":"GitHub Action Integration should validate core GitHub Actions integration","status":"passed","title":"should validate core GitHub Actions integration"},{"ancestorTitles":["GitHub Action Integration"],"duration":0,"failureMessages":[],"fullName":"GitHub Action Integration should access GitHub context correctly","status":"passed","title":"should access GitHub context correctly"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":true,"collectCoverage":true,"collectCoverageFrom":["src/**/*.ts","!src/**/*.d.ts"],"coverageDirectory":"/home/runner/work/github-pages-quick-index/github-pages-quick-index/build/coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":3,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/home/runner/work/github-pages-quick-index/github-pages-quick-index/node_modules/jest-html-reporters/index.js",{"publicPath":"./build/jest","expand":true,"includeFailureMsg":true,"includeSuiteFailure":true}]],"rootDir":"/home/runner/work/github-pages-quick-index/github-pages-quick-index","runTestsByPath":false,"seed":2080059567,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/home/runner/work/github-pages-quick-index/github-pages-quick-index/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"none","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"../coverage/lcov-report/index.html"},"endTime":1756610579265,"_reporterOptions":{"publicPath":"./build/jest","filename":"jest_html_reporters.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true},"logInfoMapping":{},"attachInfos":{}})